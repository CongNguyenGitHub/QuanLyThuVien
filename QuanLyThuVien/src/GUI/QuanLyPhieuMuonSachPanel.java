/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author minh
 */
import DTO.PhieuMuonSach;
import DAO.DuLieuBang;
import java.awt.Color;
import java.sql.*;
import javax.swing.*;
import DAO.*;
//import com.sun.glass.events.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.util.Map;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.Vector;
public class QuanLyPhieuMuonSachPanel extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyPhieuMuonSachPanel
     */
    public static String sql = "select * from PHIEUMUONSACH order by MAPHIEUMUONSACH asc";
    public static Connection conn = Connect.getConnect();
    public static PreparedStatement pst = null;
    public static ResultSet rs = null;
    SimpleDateFormat formatter = new SimpleDateFormat("d MMM, y");
    java.util.Date date = new java.util.Date();
    
    public QuanLyPhieuMuonSachPanel() {
        initComponents();
        setBackground(Color.white);
        txtNgayMuon.setEnabled(false);
        txtTenDocGia.setEnabled(false);
        lamMoi();
        
    }

    private void lamMoi(){
        this.cbMaDocGia.setEnabled(true);
        txtNgayMuon.setText(formatter.format(date));
        DuLieuBang.Load(sql, tbPhieuMuonSach);
        Vector<Integer> listMaDocGia=DAO.PhieuMuonSachDAO.getListMaDocGia();
        for(int i=0;i<listMaDocGia.size();i++){
            this.cbMaDocGia.addItem(String.valueOf(listMaDocGia.get(i)));
        }
        Vector<Integer> listMaSach=DAO.PhieuMuonSachDAO.getListMaDauSach();
        for(int i=0;i<listMaSach.size();i++){
            this.cbMaDauSach.addItem(String.valueOf(listMaSach.get(i)));
        }
        DefaultTableModel model = (DefaultTableModel) tbSachMuon.getModel();
        model.setRowCount(0);
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btThemMoi = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbcbb = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbMaDauSach = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSachMuon = new javax.swing.JTable();
        cbMaDocGia = new javax.swing.JComboBox<>();
        txtTenDocGia = new javax.swing.JTextField();
        lbTenDocGia = new javax.swing.JLabel();
        txtNgayMuon = new javax.swing.JTextField();
        cbMaDauSach = new javax.swing.JComboBox<>();
        btThemSach = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btXoaXach = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPhieuMuonSach = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1074, 571));

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);
        jToolBar1.setPreferredSize(new java.awt.Dimension(65, 62));

        btThemMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-add-50.png"))); // NOI18N
        btThemMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btThemMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemMoiActionPerformed(evt);
            }
        });
        jToolBar1.add(btThemMoi);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.pink, null));
        jPanel1.setPreferredSize(new java.awt.Dimension(309, 394));

        lbcbb.setText("Mã độc giả");
        lbcbb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setText("Ngày mượn");

        lbMaDauSach.setText("Mã đầu sách");

        tbSachMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MADAUSACH", "TENDAUSACH", "SOLUONG"
            }
        ));
        tbSachMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSachMuonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbSachMuon);

        cbMaDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaDocGiaActionPerformed(evt);
            }
        });

        txtTenDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDocGiaActionPerformed(evt);
            }
        });

        lbTenDocGia.setText("Tên độc giả");

        cbMaDauSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaDauSachActionPerformed(evt);
            }
        });

        btThemSach.setText("Thêm sách");
        btThemSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemSachActionPerformed(evt);
            }
        });

        jLabel2.setText("Số lượng");

        btXoaXach.setText("Xóa sách");
        btXoaXach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaXachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btThemSach)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btXoaXach)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbMaDauSach, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbTenDocGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbcbb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNgayMuon)
                                    .addComponent(cbMaDauSach, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTenDocGia)
                                    .addComponent(cbMaDocGia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSoLuong))))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbMaDocGia, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lbcbb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenDocGia, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lbTenDocGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNgayMuon, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbMaDauSach, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lbMaDauSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btThemSach)
                    .addComponent(btXoaXach))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        tbPhieuMuonSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MAPHIEUMUONSACH", "MADOCGIA", "NGAYMUON"
            }
        ));
        tbPhieuMuonSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhieuMuonSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPhieuMuonSach);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ PHIẾU MƯỢN SÁCH");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 0, 204), null));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1074, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void tbPhieuMuonSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhieuMuonSachMouseClicked
        // TODO add your handling code here:
        

    }//GEN-LAST:event_tbPhieuMuonSachMouseClicked


    private void btThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemMoiActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbSachMuon.getModel();
        if(model.getRowCount()>0){
            String selectedMaDocGia = this.cbMaDocGia.getSelectedItem().toString();
            Map<Integer, Integer> dsMuon = new HashMap<>();
            for (int i = 0; i < model.getRowCount(); i++) {
                int maSach = (int) model.getValueAt(i, 0); // Lấy giá trị từ cột MASACH
                int soLuong = (int) model.getValueAt(i, 2); // Lấy giá trị từ cột SOLUONG
                if(!dsMuon.containsKey(maSach)){
                    dsMuon.put(maSach, soLuong);
                }
                else {
                    dsMuon.put(maSach, soLuong+dsMuon.get(maSach));
                }
            }
            for(Entry<Integer, Integer> entry : dsMuon.entrySet()) {
                int maSach = entry.getKey();
                int soLuong = entry.getValue();
                if(!DAO.PhieuMuonSachDAO.KTSanCo(maSach,soLuong)){
                    JOptionPane.showMessageDialog(null,"Số lượng tồn kho không đủ cho mã sách:"+maSach,"Thông báo",1);
                    return ;
                }

            }
            int maDocGia=0;
            if (!selectedMaDocGia.isEmpty()){
               maDocGia = Integer.parseInt(selectedMaDocGia);
            }
            int result=JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn thêm phiếu mượn sách không","Xác nhận",JOptionPane.YES_NO_OPTION);
            if(result==JOptionPane.YES_OPTION){
                    PhieuMuonSach pms=new PhieuMuonSach();
                    pms.setMaDocGia(maDocGia);
                    try {
                        pms.setNgayMuon(new java.sql.Date(formatter.parse(this.txtNgayMuon.getText()).getTime()));
                    } 
                    catch (ParseException ex) {
                        Logger.getLogger(QuanLyPhieuMuonSachPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    pms.setHanTra();
                    pms.setTinhTrang(0);
                    pms.setDSSachMuon(dsMuon);
                    pms.setTongSL();
                    pms.setXmlString();
                    DAO.PhieuMuonSachDAO.ThemPMS(pms);
                    lamMoi();
                }
            }
        else {
            JOptionPane.showMessageDialog(null,"Bạn chưa chọn sách","Thông báo",1);
        }
    }//GEN-LAST:event_btThemMoiActionPerformed

    private void tbSachMuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSachMuonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbSachMuonMouseClicked

    private void cbMaDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaDocGiaActionPerformed
         String selectedMaDocGia = this.cbMaDocGia.getSelectedItem().toString();

        // Kiểm tra xem có mã độc giả được chọn không
        if (!selectedMaDocGia.isEmpty()) {
            // Chuyển đổi mã độc giả sang kiểu số nguyên
            int maDocGia = Integer.parseInt(selectedMaDocGia);

            // Gọi phương thức để lấy tên độc giả từ DAO
            String tenDocGia = DAO.PhieuMuonSachDAO.getTenDocGia(maDocGia);

            // Gán tên độc giả vào JTextField hoặc JTextArea hoặc nơi bạn muốn hiển thị
            this.txtTenDocGia.setText(tenDocGia);
        } else {
            // Xử lý trường hợp không có mã độc giả được chọn
            // Ví dụ: có thể làm sạch nơi hiển thị tên độc giả
            this.txtTenDocGia.setText("");
        }
    }//GEN-LAST:event_cbMaDocGiaActionPerformed

    private void txtTenDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDocGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDocGiaActionPerformed

    private void cbMaDauSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaDauSachActionPerformed
       
    }//GEN-LAST:event_cbMaDauSachActionPerformed
    boolean kiemTraDieuKien(){
       if(this.cbMaDocGia.getSelectedIndex()==-1){
           JOptionPane.showMessageDialog(null,"Bạn chưa nhập mã độc giả","Thông báo",1);
       }
       else if(this.cbMaDauSach.getSelectedIndex()==-1) {
           JOptionPane.showMessageDialog(null,"Bạn chưa nhập mã sách","Thông báo",1);
       }
       else if(this.txtSoLuong.getText().isEmpty()){
           JOptionPane.showMessageDialog(null,"Bạn chưa nhập số lượng","Thông báo",1);
       }
       else if (!isNumeric(this.txtSoLuong.getText())) {
            JOptionPane.showMessageDialog(null,"Số lượng phải là số","Thông báo",1);
       }
       else return true;
       return false;
       
    }
    private boolean isNumeric(String str) {
        return str.matches("\\d+");
    }
    private void btThemSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemSachActionPerformed

       if (kiemTraDieuKien()){
        String selectedMaSach=this.cbMaDauSach.getSelectedItem().toString();
        if(!selectedMaSach.isEmpty()){
                int maDauSach=Integer.parseInt(selectedMaSach);
                String tenDauSach=DAO.PhieuMuonSachDAO.getTenDauSach(maDauSach);
                int soLuong=Integer.parseInt(this.txtSoLuong.getText());
                DefaultTableModel model = (DefaultTableModel) tbSachMuon.getModel();
                model.addRow(new Object[]{maDauSach, tenDauSach, soLuong});
                this.cbMaDocGia.setEnabled(false);

            }
        }
       
    }//GEN-LAST:event_btThemSachActionPerformed

    private void btXoaXachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaXachActionPerformed
        int selectedRow = this.tbSachMuon.getSelectedRow();
        if (selectedRow != -1) {
            int modelRow = this.tbSachMuon.convertRowIndexToModel(selectedRow);

            // Lấy mô hình dữ liệu của JTable
            DefaultTableModel model = (DefaultTableModel) this.tbSachMuon.getModel();

            // Xóa dòng từ mô hình dữ liệu
            model.removeRow(modelRow);
        } else {
            JOptionPane.showMessageDialog(null, "Chọn một dòng để xóa.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btXoaXachActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btThemMoi;
    private javax.swing.JButton btThemSach;
    private javax.swing.JButton btXoaXach;
    private javax.swing.JComboBox<String> cbMaDauSach;
    private javax.swing.JComboBox<String> cbMaDocGia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lbMaDauSach;
    private javax.swing.JLabel lbTenDocGia;
    private javax.swing.JLabel lbcbb;
    private javax.swing.JTable tbPhieuMuonSach;
    private javax.swing.JTable tbSachMuon;
    private javax.swing.JTextField txtNgayMuon;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenDocGia;
    // End of variables declaration//GEN-END:variables
}
